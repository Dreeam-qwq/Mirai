From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Simon Gardling <titaniumtown@gmail.com>
Date: Fri, 14 Jan 2022 12:00:42 -0500
Subject: [PATCH] some entity micro opts

Original code by Titaniumtown, licensed under GPL v3
You can find the original code on https://gitlab.com/Titaniumtown/JettPack

diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index b64e40b2c23f0ca94cf356a369a654452fe5375c..11c0f0a4d80950616fd519a023533297721868e8 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -2031,12 +2031,18 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, S
         }
     }
 
+    // JettPack start - allow passing BlockPos to getLightLevelDependentMagicValue
     /** @deprecated */
     @Deprecated
     public float getLightLevelDependentMagicValue() {
-        return this.level().hasChunkAt(this.getBlockX(), this.getBlockZ()) ? this.level().getLightLevelDependentMagicValue(BlockPos.containing(this.getX(), this.getEyeY(), this.getZ())) : 0.0F;
+        return this.level().getLightLevelDependentMagicValue(BlockPos.containing(this.getX(), this.getEyeY(), this.getZ()));
     }
 
+    public float getLightLevelDependentMagicValue(BlockPos pos) {
+        return this.level().hasChunkAt(this.getBlockX(), this.getBlockZ()) ? this.level().getLightLevelDependentMagicValue(pos) : 0.0F;
+    }
+    // JettPack end
+
     public void absMoveTo(double x, double y, double z, float yaw, float pitch) {
         this.absMoveTo(x, y, z);
         this.setYRot(yaw % 360.0F);
@@ -4706,6 +4712,12 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, S
     }
     // Paper end - block invalid positions
 
+    // JettPack start
+    public final int getPositionHashCode() {
+        return this.position.hashCode();
+    }
+    // JettPack end
+
     public final void setPosRaw(double x, double y, double z) {
         // Paper start
         this.setPosRaw(x, y, z, false);
diff --git a/src/main/java/net/minecraft/world/entity/Mob.java b/src/main/java/net/minecraft/world/entity/Mob.java
index a5b2c7a76893b41f8e133308ac2a9915e3ebb95f..f89226af65baa849b5e4abaea24f2d53d2593dd7 100644
--- a/src/main/java/net/minecraft/world/entity/Mob.java
+++ b/src/main/java/net/minecraft/world/entity/Mob.java
@@ -1716,15 +1716,31 @@ public abstract class Mob extends LivingEntity implements Targeting {
 
     }
 
+    // JettPack start - cache eye blockpos
+    private BlockPos cached_eye_blockpos;
+    private int cached_position_hashcode;
+    // JettPack end
     public boolean isSunBurnTick() {
         if (this.level().isDay() && !this.level().isClientSide) {
-            float f = this.getLightLevelDependentMagicValue();
-            BlockPos blockposition = BlockPos.containing(this.getX(), this.getEyeY(), this.getZ());
+            // JettPack start - optimizations and cache eye blockpos
+            int positionHashCode = this.getPositionHashCode();
+            if (this.cached_position_hashcode != positionHashCode) {
+                this.cached_eye_blockpos = BlockPos.containing(this.getX(), this.getEyeY(), this.getZ());
+                this.cached_position_hashcode = positionHashCode;
+            }
+
+            float f = this.getLightLevelDependentMagicValue(cached_eye_blockpos); // Pass BlockPos to getBrightness
+
+            // Check brightness first
+            if (f <= 0.5F) return false;
+            if (this.random.nextFloat() * 30.0F >= (f - 0.4F) * 2.0F) return false;
+
             boolean flag = this.isInWaterRainOrBubble() || this.isInPowderSnow || this.wasInPowderSnow;
 
-            if (f > 0.5F && this.random.nextFloat() * 30.0F < (f - 0.4F) * 2.0F && !flag && this.level().canSeeSky(blockposition)) {
+            if (!flag && this.level().canSeeSky(this.cached_eye_blockpos)) { // JettPack - move brightness checks up
                 return true;
             }
+            // JettPack end
         }
 
         return false;
