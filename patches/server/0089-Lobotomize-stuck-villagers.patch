From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <Blake.Galbreath@GMail.com>
Date: Thu, 3 Dec 2020 17:56:18 -0600
Subject: [PATCH] Lobotomize stuck villagers

Original code by PurpurMC, licensed under MIT
You can find the original code on https://github.com/PurpurMC/Purpur

diff --git a/src/main/java/dev/etil/mirai/MiraiConfig.java b/src/main/java/dev/etil/mirai/MiraiConfig.java
index e0eae8b46fa1177214f2ed833f2b40e0bf407211..3186a8f4fad751cffef318b5ad1bd716d7c045cb 100644
--- a/src/main/java/dev/etil/mirai/MiraiConfig.java
+++ b/src/main/java/dev/etil/mirai/MiraiConfig.java
@@ -240,4 +240,13 @@ public class MiraiConfig {
             "It also disables the popup when joining a server without",
             "'secure chat', such as offline-mode servers.");
     }
+
+    public static boolean villagerLobotomizeEnabled;
+    public static int villagerLobotomizeCheckInterval;
+    private static void lobotomizing() {
+        villagerLobotomizeEnabled = getBoolean("villager.lobotomize.enabled", false,
+            "Whether or not villagers should be lobotomized when",
+            "standing on a 1x1 block while being stuck.");
+        villagerLobotomizeCheckInterval = getInt("villager.lobotomize.check-interval", 100);
+    }
 }
diff --git a/src/main/java/net/minecraft/world/entity/npc/Villager.java b/src/main/java/net/minecraft/world/entity/npc/Villager.java
index c4ddf2661bca728d504918171295e10e307b18b4..03626bdfebdda9ad9f74d8d8a560fead1917abed 100644
--- a/src/main/java/net/minecraft/world/entity/npc/Villager.java
+++ b/src/main/java/net/minecraft/world/entity/npc/Villager.java
@@ -140,6 +140,8 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     }, MemoryModuleType.MEETING_POINT, (entityvillager, holder) -> {
         return holder.is(PoiTypes.MEETING);
     });
+    private boolean isLobotomized = false; public boolean isLobotomized() { return this.isLobotomized; } // Purpur
+    private int notLobotomizedCount = 0; // Purpur
 
     public long nextGolemPanic = -1; // Pufferfish
 
@@ -253,14 +255,29 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
         // Paper start
         this.customServerAiStep(false);
     }
-    protected void customServerAiStep(final boolean inactive) {
+    protected void customServerAiStep(boolean inactive) {
         // Paper end
         this.level().getProfiler().push("villagerBrain");
+        // Purpur start
+        if (dev.etil.mirai.MiraiConfig.villagerLobotomizeEnabled) {
+            // treat as inactive if lobotomized
+            inactive = inactive || checkLobotomized();
+        } else {
+            // clean up state for API
+            this.isLobotomized = false;
+        }
+        // Purpur end
         // Pufferfish start
         if (!inactive && this.behaviorTick++ % this.activatedPriority == 0) {
             this.getBrain().tick((ServerLevel) this.level(), this); // Paper
         }
         // Pufferfish end
+        // Purpur start
+        else if (this.isLobotomized && shouldRestock()) {
+            // make sure we restock if needed when lobotomized
+            restock();
+        }
+        // Purpur end
         this.level().getProfiler().pop();
         if (this.assignProfessionWhenSpawned) {
             this.assignProfessionWhenSpawned = false;
@@ -1083,4 +1100,47 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
 
         return optional.isPresent() ? worldTime - (Long) optional.get() < 24000L : false;
     }
+
+    // Purpur start
+    private boolean checkLobotomized() {
+        int interval = dev.etil.mirai.MiraiConfig.villagerLobotomizeCheckInterval;
+        if (this.notLobotomizedCount > 3) {
+            // check half as often if not lobotomized for the last 3+ consecutive checks
+            interval *= 2;
+        }
+        if ((this.level().getGameTime()) % interval == 0) {
+            // offset Y for short blocks like dirt_path/farmland TODO: check that it works
+            this.isLobotomized = !canTravelFrom(this.getBlockPosBelowThatAffectsMyMovement());
+
+            if (this.isLobotomized) {
+                this.notLobotomizedCount = 0;
+            } else {
+                this.notLobotomizedCount++;
+            }
+        }
+        return this.isLobotomized;
+    }
+
+    private boolean canTravelFrom(BlockPos pos) {
+        return canTravelTo(pos.east()) || canTravelTo(pos.west()) || canTravelTo(pos.north()) || canTravelTo(pos.south());
+    }
+
+    private boolean canTravelTo(BlockPos pos) {
+        net.minecraft.world.level.block.state.BlockState state = this.level().getBlockStateIfLoaded(pos);
+        if (state == null) {
+            // chunk not loaded
+            return false;
+        }
+        net.minecraft.world.level.block.Block bottom = state.getBlock();
+        if (bottom instanceof net.minecraft.world.level.block.FenceBlock ||
+                bottom instanceof net.minecraft.world.level.block.FenceGateBlock ||
+                bottom instanceof net.minecraft.world.level.block.WallBlock) {
+            // bottom block is too tall to get over
+            return false;
+        }
+        net.minecraft.world.level.block.Block top = level().getBlockState(pos.above()).getBlock();
+        // only if both blocks have no collision
+        return !bottom.hasCollision && !top.hasCollision;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftVillager.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftVillager.java
index f21c715ea109164efa755cddb35ef656a9859759..0c9154d1d3c1534a25c08c75fab102b68958fab9 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftVillager.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftVillager.java
@@ -222,4 +222,11 @@ public class CraftVillager extends CraftAbstractVillager implements Villager {
         getHandle().getGossips().gossips.clear();
     }
     // Paper end
+
+    // Purpur start
+    @Override
+    public boolean isLobotomized() {
+        return getHandle().isLobotomized();
+    }
+    // Purpur end
 }
