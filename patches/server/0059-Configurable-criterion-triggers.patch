From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mykyta Komarnytskyy <nkomarn@hotmail.com>
Date: Sat, 24 Oct 2020 21:08:17 -0500
Subject: [PATCH] Configurable criterion triggers

This patch adds toggles for three criterion triggers that are called every tick. These can be very unnecessary, and especially in the case of CriterionTriggerEnterBlock, quite heavy.

Original code by YatopiaMC, licensed under MIT
You can find the original code on https://github.com/YatopiaMC/Yatopia

diff --git a/src/main/java/dev/etil/mirai/MiraiConfig.java b/src/main/java/dev/etil/mirai/MiraiConfig.java
index b913cdda1625facd5a9a57ae3c6844072d3935e6..6266ae81a2b7f89da1bee07340b6b1c1e5c975ec 100644
--- a/src/main/java/dev/etil/mirai/MiraiConfig.java
+++ b/src/main/java/dev/etil/mirai/MiraiConfig.java
@@ -204,4 +204,16 @@ public class MiraiConfig {
             "Whether or not server should animate enchantment table book.",
             "Disabling it can save MSPT, especially with quite a lot of enchantment tables.");
     }
+
+    public static boolean criterionTriggerEnterBlock;
+    public static boolean criterionTriggerTick;
+    public static boolean criterionTriggerLocation;
+    private static void criterionTriggers() {
+        criterionTriggerEnterBlock = getBoolean("criterion-trigger.enter-block", true,
+            "Whether or not server should listen to block enter triggers.");
+        criterionTriggerTick = getBoolean("criterion-trigger.tick", true,
+            "Whether or not server should listen to tick triggers.");
+        criterionTriggerLocation = getBoolean("criterion-trigger.location", true,
+            "Whether or not server should listen to location triggers.");
+    }
 }
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 071b606bdea284542cf94aa9c644848bbe8da0d3..c1493eeef6a0f9832373c4d3295cdd563e9ace1a 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -645,7 +645,7 @@ public class ServerPlayer extends Player {
 
     @Override
     protected void onInsideBlock(BlockState state) {
-        CriteriaTriggers.ENTER_BLOCK.trigger(this, state);
+        if (dev.etil.mirai.MiraiConfig.criterionTriggerEnterBlock) CriteriaTriggers.ENTER_BLOCK.trigger(this, state); // Mirai
     }
 
     @Override
@@ -692,7 +692,7 @@ public class ServerPlayer extends Player {
             }
         }
 
-        CriteriaTriggers.TICK.trigger(this);
+        if (dev.etil.mirai.MiraiConfig.criterionTriggerTick) CriteriaTriggers.TICK.trigger(this); // Mirai
         if (this.levitationStartPos != null) {
             CriteriaTriggers.LEVITATION.trigger(this, this.levitationStartPos, this.tickCount - this.levitationStartTime);
         }
@@ -768,9 +768,7 @@ public class ServerPlayer extends Player {
                 this.connection.send(new ClientboundSetExperiencePacket(this.experienceProgress, this.totalExperience, this.experienceLevel));
             }
 
-            if (this.tickCount % 20 == 0) {
-                CriteriaTriggers.LOCATION.trigger(this);
-            }
+            if (dev.etil.mirai.MiraiConfig.criterionTriggerLocation && this.tickCount % 20 == 0) CriteriaTriggers.LOCATION.trigger(this); // Mirai
 
             // CraftBukkit start - initialize oldLevel, fire PlayerLevelChangeEvent, and tick client-sided world border
             if (this.oldLevel == -1) {
