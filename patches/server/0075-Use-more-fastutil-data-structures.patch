From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: nopjmp <kthompson@hey.com>
Date: Mon, 20 Dec 2021 19:16:11 -0600
Subject: [PATCH] Use more fastutil data structures

Original code by nopjmp, licensed under MIT
You can find the original code on https://github.com/nopjmp/Dionysus

diff --git a/src/main/java/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
index a53dd1ea02bd19826cd9fd337459b08e9533bce8..d4fcb40c84f70f8a86e19651e4068ea61db39a10 100644
--- a/src/main/java/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
@@ -3,7 +3,6 @@ package net.minecraft.server.network;
 import net.minecraft.SharedConstants;
 import net.minecraft.network.Connection;
 import net.minecraft.network.chat.Component;
-import net.minecraft.network.chat.MutableComponent;
 import net.minecraft.network.protocol.handshake.ClientIntent;
 import net.minecraft.network.protocol.handshake.ClientIntentionPacket;
 import net.minecraft.network.protocol.handshake.ServerHandshakePacketListener;
@@ -13,8 +12,8 @@ import net.minecraft.server.MinecraftServer;
 
 // CraftBukkit start
 import java.net.InetAddress;
-import java.util.HashMap;
 // CraftBukkit end
+import it.unimi.dsi.fastutil.objects.Object2LongOpenHashMap; // Dionysus
 
 public class ServerHandshakePacketListenerImpl implements ServerHandshakePacketListener {
 
@@ -24,7 +23,7 @@ public class ServerHandshakePacketListenerImpl implements ServerHandshakePacketL
     static final java.util.regex.Pattern PROP_PATTERN = java.util.regex.Pattern.compile("\\w{0,16}");
     // Spigot end
     // CraftBukkit start - add fields
-    private static final HashMap<InetAddress, Long> throttleTracker = new HashMap<InetAddress, Long>();
+    private static final Object2LongOpenHashMap<InetAddress> throttleTracker = new Object2LongOpenHashMap<>(); // Dionysus
     private static int throttleCounter = 0;
     // CraftBukkit end
     private static final Component IGNORE_STATUS_REASON = Component.translatable("disconnect.ignoring_status_request");
@@ -51,7 +50,7 @@ public class ServerHandshakePacketListenerImpl implements ServerHandshakePacketL
                     InetAddress address = ((java.net.InetSocketAddress) this.connection.getRemoteAddress()).getAddress();
 
                     synchronized (ServerHandshakePacketListenerImpl.throttleTracker) {
-                        if (ServerHandshakePacketListenerImpl.throttleTracker.containsKey(address) && !"127.0.0.1".equals(address.getHostAddress()) && currentTime - ServerHandshakePacketListenerImpl.throttleTracker.get(address) < connectionThrottle) {
+                        if (ServerHandshakePacketListenerImpl.throttleTracker.containsKey(address) && !"127.0.0.1".equals(address.getHostAddress()) && currentTime - ServerHandshakePacketListenerImpl.throttleTracker.getLong(address) < connectionThrottle) { // Dionysus
                             ServerHandshakePacketListenerImpl.throttleTracker.put(address, currentTime);
                             Component chatmessage = io.papermc.paper.adventure.PaperAdventure.asVanilla(io.papermc.paper.configuration.GlobalConfiguration.get().messages.kick.connectionThrottle); // Paper - Configurable connection throttle kick message
                             this.connection.send(new ClientboundLoginDisconnectPacket(chatmessage));
@@ -65,13 +64,7 @@ public class ServerHandshakePacketListenerImpl implements ServerHandshakePacketL
                             ServerHandshakePacketListenerImpl.throttleCounter = 0;
 
                             // Cleanup stale entries
-                            java.util.Iterator iter = ServerHandshakePacketListenerImpl.throttleTracker.entrySet().iterator();
-                            while (iter.hasNext()) {
-                                java.util.Map.Entry<InetAddress, Long> entry = (java.util.Map.Entry) iter.next();
-                                if (entry.getValue() > connectionThrottle) {
-                                    iter.remove();
-                                }
-                            }
+                            ServerHandshakePacketListenerImpl.throttleTracker.object2LongEntrySet().removeIf(entry -> entry.getLongValue() > connectionThrottle); // Dionysus
                         }
                     }
                     } // Paper - Unix domain socket support
