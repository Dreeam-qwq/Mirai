From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: nopjmp <kthompson@hey.com>
Date: Mon, 20 Dec 2021 19:16:11 -0600
Subject: [PATCH] Use more fastutil data structures

Original license: MIT
Original project: https://github.com/nopjmp/Dionysus

Copyright 2021 Kayla Thompson

diff --git a/src/main/java/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
index 8f52acc03943b18f87b3b2581066496a254b1156..45a8ff666c74408d1659d8afa44df8e61aa65587 100644
--- a/src/main/java/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
@@ -13,8 +13,14 @@ import net.minecraft.server.MinecraftServer;
 
 // CraftBukkit start
 import java.net.InetAddress;
-import java.util.HashMap;
+//import java.util.HashMap; // Dionysus
 // CraftBukkit end
+// Dionysus start
+import it.unimi.dsi.fastutil.objects.Object2LongMap;
+import it.unimi.dsi.fastutil.objects.Object2LongOpenHashMap;
+import java.util.Iterator;
+import java.util.Map;
+// Dionysus end
 
 public class ServerHandshakePacketListenerImpl implements ServerHandshakePacketListener {
 
@@ -24,7 +30,7 @@ public class ServerHandshakePacketListenerImpl implements ServerHandshakePacketL
     static final java.util.regex.Pattern PROP_PATTERN = java.util.regex.Pattern.compile("\\w{0,16}");
     // Spigot end
     // CraftBukkit start - add fields
-    private static final HashMap<InetAddress, Long> throttleTracker = new HashMap<InetAddress, Long>();
+    private static final Object2LongOpenHashMap<InetAddress> throttleTracker = new Object2LongOpenHashMap<>(); // Dionysus
     private static int throttleCounter = 0;
     // CraftBukkit end
     private static final Component IGNORE_STATUS_REASON = Component.literal("Ignoring status request");
@@ -51,7 +57,7 @@ public class ServerHandshakePacketListenerImpl implements ServerHandshakePacketL
                     InetAddress address = ((java.net.InetSocketAddress) this.connection.getRemoteAddress()).getAddress();
 
                     synchronized (ServerHandshakePacketListenerImpl.throttleTracker) {
-                        if (ServerHandshakePacketListenerImpl.throttleTracker.containsKey(address) && !"127.0.0.1".equals(address.getHostAddress()) && currentTime - ServerHandshakePacketListenerImpl.throttleTracker.get(address) < connectionThrottle) {
+                        if (ServerHandshakePacketListenerImpl.throttleTracker.containsKey(address) && !"127.0.0.1".equals(address.getHostAddress()) && currentTime - ServerHandshakePacketListenerImpl.throttleTracker.getLong(address) < connectionThrottle) { // Dionysus
                             ServerHandshakePacketListenerImpl.throttleTracker.put(address, currentTime);
                             Component chatmessage = io.papermc.paper.adventure.PaperAdventure.asVanilla(io.papermc.paper.configuration.GlobalConfiguration.get().messages.kick.connectionThrottle); // Paper - Configurable connection throttle kick message
                             this.connection.send(new ClientboundLoginDisconnectPacket(chatmessage));
@@ -65,13 +71,7 @@ public class ServerHandshakePacketListenerImpl implements ServerHandshakePacketL
                             ServerHandshakePacketListenerImpl.throttleCounter = 0;
 
                             // Cleanup stale entries
-                            java.util.Iterator iter = ServerHandshakePacketListenerImpl.throttleTracker.entrySet().iterator();
-                            while (iter.hasNext()) {
-                                java.util.Map.Entry<InetAddress, Long> entry = (java.util.Map.Entry) iter.next();
-                                if (entry.getValue() > connectionThrottle) {
-                                    iter.remove();
-                                }
-                            }
+                            throttleTracker.object2LongEntrySet().removeIf(entry -> entry.getLongValue() > connectionThrottle); // Dionysus
                         }
                     }
                     } // Paper - add closing bracket for if check above
